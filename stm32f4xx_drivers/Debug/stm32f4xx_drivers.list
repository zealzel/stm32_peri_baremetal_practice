
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008ec  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a94  08000a9c  00010a9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a94  08000a94  00010a9c  2**0
                  CONTENTS
  4 .ARM          00000000  08000a94  08000a94  00010a9c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a94  08000a9c  00010a9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a94  08000a94  00010a94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a98  08000a98  00010a98  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010a9c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010a9c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000afb  00000000  00000000  00010acc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002be  00000000  00000000  000115c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00011888  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000a0  00000000  00000000  00011950  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001e15  00000000  00000000  000119f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001067  00000000  00000000  00013805  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000084c9  00000000  00000000  0001486c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001cd35  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000288  00000000  00000000  0001cd88  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a7c 	.word	0x08000a7c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a7c 	.word	0x08000a7c

080001e8 <delay>:
#include <string.h>
#include "stm32f407xx.h"
#include "stm32f407xx_gpio_driver.h"

void delay(void) {
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
    for (uint32_t i = 0; i < 500000 / 2; i++) {
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
    }
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	0003d08f 	.word	0x0003d08f

08000214 <main>:

int main(void) {
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
    GPIO_Handle_t GpioLed, GpioBtn;
    memset(&GpioLed, 0, sizeof(GpioLed));
 800021a:	f107 030c 	add.w	r3, r7, #12
 800021e:	220c      	movs	r2, #12
 8000220:	2100      	movs	r1, #0
 8000222:	4618      	mov	r0, r3
 8000224:	f000 fc22 	bl	8000a6c <memset>
    memset(&GpioBtn, 0, sizeof(GpioBtn));
 8000228:	463b      	mov	r3, r7
 800022a:	220c      	movs	r2, #12
 800022c:	2100      	movs	r1, #0
 800022e:	4618      	mov	r0, r3
 8000230:	f000 fc1c 	bl	8000a6c <memset>

    GpioLed.pGPIOx = GPIOD;
 8000234:	4b17      	ldr	r3, [pc, #92]	; (8000294 <main+0x80>)
 8000236:	60fb      	str	r3, [r7, #12]
    GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000238:	230c      	movs	r3, #12
 800023a:	743b      	strb	r3, [r7, #16]
    GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800023c:	2301      	movs	r3, #1
 800023e:	747b      	strb	r3, [r7, #17]
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000240:	2302      	movs	r3, #2
 8000242:	74bb      	strb	r3, [r7, #18]
    GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000244:	2300      	movs	r3, #0
 8000246:	753b      	strb	r3, [r7, #20]
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000248:	2300      	movs	r3, #0
 800024a:	74fb      	strb	r3, [r7, #19]
    GPIO_PeriClockControl(GPIOD, ENABLE);
 800024c:	2101      	movs	r1, #1
 800024e:	4811      	ldr	r0, [pc, #68]	; (8000294 <main+0x80>)
 8000250:	f000 f85e 	bl	8000310 <GPIO_PeriClockControl>
    GPIO_init(&GpioLed);
 8000254:	f107 030c 	add.w	r3, r7, #12
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f941 	bl	80004e0 <GPIO_init>

    // GpioBtn.pGPIOx = GPIOD; GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
    // GpioBtn.pGPIOx = GPIOD; GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_1;
    GpioBtn.pGPIOx = GPIOC; GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 800025e:	4b0e      	ldr	r3, [pc, #56]	; (8000298 <main+0x84>)
 8000260:	603b      	str	r3, [r7, #0]
 8000262:	230f      	movs	r3, #15
 8000264:	713b      	strb	r3, [r7, #4]

    GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000266:	2304      	movs	r3, #4
 8000268:	717b      	strb	r3, [r7, #5]
    // GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT;
    GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800026a:	2302      	movs	r3, #2
 800026c:	71bb      	strb	r3, [r7, #6]
    // GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
    GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800026e:	2300      	movs	r3, #0
 8000270:	71fb      	strb	r3, [r7, #7]
    GPIO_PeriClockControl(GPIOD, ENABLE);
 8000272:	2101      	movs	r1, #1
 8000274:	4807      	ldr	r0, [pc, #28]	; (8000294 <main+0x80>)
 8000276:	f000 f84b 	bl	8000310 <GPIO_PeriClockControl>
    GPIO_init(&GpioBtn);
 800027a:	463b      	mov	r3, r7
 800027c:	4618      	mov	r0, r3
 800027e:	f000 f92f 	bl	80004e0 <GPIO_init>

    // IRQ Configurations
    // GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5, ENABLE); GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5, NVIC_IRQ_PRI15);
    // GPIO_IRQPriorityConfig(IRQ_NO_EXTI1, NVIC_IRQ_PRI15); GPIO_IRQInterruptConfig(IRQ_NO_EXTI1, ENABLE);
    GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, NVIC_IRQ_PRI15); GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, ENABLE);
 8000282:	210f      	movs	r1, #15
 8000284:	2028      	movs	r0, #40	; 0x28
 8000286:	f000 fb83 	bl	8000990 <GPIO_IRQPriorityConfig>
 800028a:	2101      	movs	r1, #1
 800028c:	2028      	movs	r0, #40	; 0x28
 800028e:	f000 faf9 	bl	8000884 <GPIO_IRQInterruptConfig>

    // GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, GPIO_PIN_SET);
    while (1);
 8000292:	e7fe      	b.n	8000292 <main+0x7e>
 8000294:	40020c00 	.word	0x40020c00
 8000298:	40020800 	.word	0x40020800

0800029c <EXTI15_10_IRQHandler>:
}

// void EXTI9_5_IRQHandler(void) {
// void EXTI1_IRQHandler(void) {
void EXTI15_10_IRQHandler(void) {
 800029c:	b580      	push	{r7, lr}
 800029e:	af00      	add	r7, sp, #0

    delay();
 80002a0:	f7ff ffa2 	bl	80001e8 <delay>
    // GPIO_IRQHandling(GPIO_PIN_NO_5);
    // GPIO_IRQHandling(GPIO_PIN_NO_1);
    GPIO_IRQHandling(GPIO_PIN_NO_15);
 80002a4:	200f      	movs	r0, #15
 80002a6:	f000 fb9d 	bl	80009e4 <GPIO_IRQHandling>

    GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 80002aa:	210c      	movs	r1, #12
 80002ac:	4802      	ldr	r0, [pc, #8]	; (80002b8 <EXTI15_10_IRQHandler+0x1c>)
 80002ae:	f000 fad3 	bl	8000858 <GPIO_ToggleOutputPin>

}
 80002b2:	bf00      	nop
 80002b4:	bd80      	pop	{r7, pc}
 80002b6:	bf00      	nop
 80002b8:	40020c00 	.word	0x40020c00

080002bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002bc:	480d      	ldr	r0, [pc, #52]	; (80002f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002be:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c4:	480c      	ldr	r0, [pc, #48]	; (80002f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002c6:	490d      	ldr	r1, [pc, #52]	; (80002fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80002c8:	4a0d      	ldr	r2, [pc, #52]	; (8000300 <LoopForever+0xe>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002cc:	e002      	b.n	80002d4 <LoopCopyDataInit>

080002ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d2:	3304      	adds	r3, #4

080002d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002d8:	d3f9      	bcc.n	80002ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002da:	4a0a      	ldr	r2, [pc, #40]	; (8000304 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002dc:	4c0a      	ldr	r4, [pc, #40]	; (8000308 <LoopForever+0x16>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e0:	e001      	b.n	80002e6 <LoopFillZerobss>

080002e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e4:	3204      	adds	r2, #4

080002e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002e8:	d3fb      	bcc.n	80002e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ea:	f000 fb9b 	bl	8000a24 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ee:	f7ff ff91 	bl	8000214 <main>

080002f2 <LoopForever>:

LoopForever:
  b LoopForever
 80002f2:	e7fe      	b.n	80002f2 <LoopForever>
  ldr   r0, =_estack
 80002f4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002fc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000300:	08000a9c 	.word	0x08000a9c
  ldr r2, =_sbss
 8000304:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000308:	2000001c 	.word	0x2000001c

0800030c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800030c:	e7fe      	b.n	800030c <ADC_IRQHandler>
	...

08000310 <GPIO_PeriClockControl>:
 *
 * @return            - none
 *
 * @Note              - none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t* pGPIOx, uint8_t EnorDi) {
 8000310:	b480      	push	{r7}
 8000312:	b083      	sub	sp, #12
 8000314:	af00      	add	r7, sp, #0
 8000316:	6078      	str	r0, [r7, #4]
 8000318:	460b      	mov	r3, r1
 800031a:	70fb      	strb	r3, [r7, #3]
    if (EnorDi == ENABLE) {
 800031c:	78fb      	ldrb	r3, [r7, #3]
 800031e:	2b01      	cmp	r3, #1
 8000320:	d162      	bne.n	80003e8 <GPIO_PeriClockControl+0xd8>
        if (pGPIOx == GPIOA) {
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a64      	ldr	r2, [pc, #400]	; (80004b8 <GPIO_PeriClockControl+0x1a8>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d106      	bne.n	8000338 <GPIO_PeriClockControl+0x28>
            GPIOA_PCLK_EN();
 800032a:	4b64      	ldr	r3, [pc, #400]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800032c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032e:	4a63      	ldr	r2, [pc, #396]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000330:	f043 0301 	orr.w	r3, r3, #1
 8000334:	6313      	str	r3, [r2, #48]	; 0x30
            GPIOH_PCLK_DI();
        } else if (pGPIOx == GPIOI) {
            GPIOI_PCLK_DI();
        }
    }
}
 8000336:	e0b9      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOB) {
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a61      	ldr	r2, [pc, #388]	; (80004c0 <GPIO_PeriClockControl+0x1b0>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d106      	bne.n	800034e <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 8000340:	4b5e      	ldr	r3, [pc, #376]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000344:	4a5d      	ldr	r2, [pc, #372]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000346:	f043 0302 	orr.w	r3, r3, #2
 800034a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034c:	e0ae      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOC) {
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	4a5c      	ldr	r2, [pc, #368]	; (80004c4 <GPIO_PeriClockControl+0x1b4>)
 8000352:	4293      	cmp	r3, r2
 8000354:	d106      	bne.n	8000364 <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 8000356:	4b59      	ldr	r3, [pc, #356]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035a:	4a58      	ldr	r2, [pc, #352]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800035c:	f043 0304 	orr.w	r3, r3, #4
 8000360:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000362:	e0a3      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOD) {
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	4a58      	ldr	r2, [pc, #352]	; (80004c8 <GPIO_PeriClockControl+0x1b8>)
 8000368:	4293      	cmp	r3, r2
 800036a:	d106      	bne.n	800037a <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 800036c:	4b53      	ldr	r3, [pc, #332]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800036e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000370:	4a52      	ldr	r2, [pc, #328]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000372:	f043 0308 	orr.w	r3, r3, #8
 8000376:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000378:	e098      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOE) {
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	4a53      	ldr	r2, [pc, #332]	; (80004cc <GPIO_PeriClockControl+0x1bc>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d106      	bne.n	8000390 <GPIO_PeriClockControl+0x80>
            GPIOE_PCLK_EN();
 8000382:	4b4e      	ldr	r3, [pc, #312]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000386:	4a4d      	ldr	r2, [pc, #308]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000388:	f043 0310 	orr.w	r3, r3, #16
 800038c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038e:	e08d      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOF) {
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	4a4f      	ldr	r2, [pc, #316]	; (80004d0 <GPIO_PeriClockControl+0x1c0>)
 8000394:	4293      	cmp	r3, r2
 8000396:	d106      	bne.n	80003a6 <GPIO_PeriClockControl+0x96>
            GPIOF_PCLK_EN();
 8000398:	4b48      	ldr	r3, [pc, #288]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800039a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039c:	4a47      	ldr	r2, [pc, #284]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800039e:	f043 0320 	orr.w	r3, r3, #32
 80003a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a4:	e082      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOG) {
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	4a4a      	ldr	r2, [pc, #296]	; (80004d4 <GPIO_PeriClockControl+0x1c4>)
 80003aa:	4293      	cmp	r3, r2
 80003ac:	d106      	bne.n	80003bc <GPIO_PeriClockControl+0xac>
            GPIOG_PCLK_EN();
 80003ae:	4b43      	ldr	r3, [pc, #268]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80003b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b2:	4a42      	ldr	r2, [pc, #264]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80003b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003b8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ba:	e077      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOH) {
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	4a46      	ldr	r2, [pc, #280]	; (80004d8 <GPIO_PeriClockControl+0x1c8>)
 80003c0:	4293      	cmp	r3, r2
 80003c2:	d106      	bne.n	80003d2 <GPIO_PeriClockControl+0xc2>
            GPIOH_PCLK_EN();
 80003c4:	4b3d      	ldr	r3, [pc, #244]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80003c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c8:	4a3c      	ldr	r2, [pc, #240]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80003ca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d0:	e06c      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOI) {
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	4a41      	ldr	r2, [pc, #260]	; (80004dc <GPIO_PeriClockControl+0x1cc>)
 80003d6:	4293      	cmp	r3, r2
 80003d8:	d168      	bne.n	80004ac <GPIO_PeriClockControl+0x19c>
            GPIOI_PCLK_EN();
 80003da:	4b38      	ldr	r3, [pc, #224]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80003dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003de:	4a37      	ldr	r2, [pc, #220]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80003e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e6:	e061      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        if (pGPIOx == GPIOA) {
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	4a33      	ldr	r2, [pc, #204]	; (80004b8 <GPIO_PeriClockControl+0x1a8>)
 80003ec:	4293      	cmp	r3, r2
 80003ee:	d106      	bne.n	80003fe <GPIO_PeriClockControl+0xee>
            GPIOA_PCLK_DI();
 80003f0:	4b32      	ldr	r3, [pc, #200]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80003f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f4:	4a31      	ldr	r2, [pc, #196]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80003f6:	f023 0301 	bic.w	r3, r3, #1
 80003fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fc:	e056      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOB) {
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	4a2f      	ldr	r2, [pc, #188]	; (80004c0 <GPIO_PeriClockControl+0x1b0>)
 8000402:	4293      	cmp	r3, r2
 8000404:	d106      	bne.n	8000414 <GPIO_PeriClockControl+0x104>
            GPIOB_PCLK_DI();
 8000406:	4b2d      	ldr	r3, [pc, #180]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000408:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040a:	4a2c      	ldr	r2, [pc, #176]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800040c:	f023 0302 	bic.w	r3, r3, #2
 8000410:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000412:	e04b      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOC) {
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	4a2b      	ldr	r2, [pc, #172]	; (80004c4 <GPIO_PeriClockControl+0x1b4>)
 8000418:	4293      	cmp	r3, r2
 800041a:	d106      	bne.n	800042a <GPIO_PeriClockControl+0x11a>
            GPIOC_PCLK_DI();
 800041c:	4b27      	ldr	r3, [pc, #156]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800041e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000420:	4a26      	ldr	r2, [pc, #152]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000422:	f023 0304 	bic.w	r3, r3, #4
 8000426:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000428:	e040      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOD) {
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	4a26      	ldr	r2, [pc, #152]	; (80004c8 <GPIO_PeriClockControl+0x1b8>)
 800042e:	4293      	cmp	r3, r2
 8000430:	d106      	bne.n	8000440 <GPIO_PeriClockControl+0x130>
            GPIOD_PCLK_DI();
 8000432:	4b22      	ldr	r3, [pc, #136]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000434:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000436:	4a21      	ldr	r2, [pc, #132]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000438:	f023 0308 	bic.w	r3, r3, #8
 800043c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043e:	e035      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOE) {
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	4a22      	ldr	r2, [pc, #136]	; (80004cc <GPIO_PeriClockControl+0x1bc>)
 8000444:	4293      	cmp	r3, r2
 8000446:	d106      	bne.n	8000456 <GPIO_PeriClockControl+0x146>
            GPIOE_PCLK_DI();
 8000448:	4b1c      	ldr	r3, [pc, #112]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800044a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800044c:	4a1b      	ldr	r2, [pc, #108]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800044e:	f023 0310 	bic.w	r3, r3, #16
 8000452:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000454:	e02a      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOF) {
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	4a1d      	ldr	r2, [pc, #116]	; (80004d0 <GPIO_PeriClockControl+0x1c0>)
 800045a:	4293      	cmp	r3, r2
 800045c:	d106      	bne.n	800046c <GPIO_PeriClockControl+0x15c>
            GPIOF_PCLK_DI();
 800045e:	4b17      	ldr	r3, [pc, #92]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000460:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000462:	4a16      	ldr	r2, [pc, #88]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000464:	f023 0320 	bic.w	r3, r3, #32
 8000468:	6313      	str	r3, [r2, #48]	; 0x30
}
 800046a:	e01f      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOG) {
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	4a19      	ldr	r2, [pc, #100]	; (80004d4 <GPIO_PeriClockControl+0x1c4>)
 8000470:	4293      	cmp	r3, r2
 8000472:	d106      	bne.n	8000482 <GPIO_PeriClockControl+0x172>
            GPIOG_PCLK_DI();
 8000474:	4b11      	ldr	r3, [pc, #68]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000476:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000478:	4a10      	ldr	r2, [pc, #64]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800047a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800047e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000480:	e014      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOH) {
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	4a14      	ldr	r2, [pc, #80]	; (80004d8 <GPIO_PeriClockControl+0x1c8>)
 8000486:	4293      	cmp	r3, r2
 8000488:	d106      	bne.n	8000498 <GPIO_PeriClockControl+0x188>
            GPIOH_PCLK_DI();
 800048a:	4b0c      	ldr	r3, [pc, #48]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 800048c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800048e:	4a0b      	ldr	r2, [pc, #44]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 8000490:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000494:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000496:	e009      	b.n	80004ac <GPIO_PeriClockControl+0x19c>
        } else if (pGPIOx == GPIOI) {
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	4a10      	ldr	r2, [pc, #64]	; (80004dc <GPIO_PeriClockControl+0x1cc>)
 800049c:	4293      	cmp	r3, r2
 800049e:	d105      	bne.n	80004ac <GPIO_PeriClockControl+0x19c>
            GPIOI_PCLK_DI();
 80004a0:	4b06      	ldr	r3, [pc, #24]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80004a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a4:	4a05      	ldr	r2, [pc, #20]	; (80004bc <GPIO_PeriClockControl+0x1ac>)
 80004a6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80004aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ac:	bf00      	nop
 80004ae:	370c      	adds	r7, #12
 80004b0:	46bd      	mov	sp, r7
 80004b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b6:	4770      	bx	lr
 80004b8:	40020000 	.word	0x40020000
 80004bc:	40023800 	.word	0x40023800
 80004c0:	40020400 	.word	0x40020400
 80004c4:	40020800 	.word	0x40020800
 80004c8:	40020c00 	.word	0x40020c00
 80004cc:	40021000 	.word	0x40021000
 80004d0:	40021400 	.word	0x40021400
 80004d4:	40021800 	.word	0x40021800
 80004d8:	40021c00 	.word	0x40021c00
 80004dc:	40022000 	.word	0x40022000

080004e0 <GPIO_init>:
 *
 * @return            - none
 *
 * @Note              - none
 */
void GPIO_init(GPIO_Handle_t* pGPIOHandle) {
 80004e0:	b480      	push	{r7}
 80004e2:	b087      	sub	sp, #28
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	6078      	str	r0, [r7, #4]
    uint32_t temp = 0; // temp register
 80004e8:	2300      	movs	r3, #0
 80004ea:	617b      	str	r3, [r7, #20]

    // 1. Configure the mode of GPIO pin
    if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	795b      	ldrb	r3, [r3, #5]
 80004f0:	2b03      	cmp	r3, #3
 80004f2:	f200 80c2 	bhi.w	800067a <GPIO_init+0x19a>
        // The non interrupt mode
        temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	795b      	ldrb	r3, [r3, #5]
 80004fa:	461a      	mov	r2, r3
                << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	791b      	ldrb	r3, [r3, #4]
 8000500:	005b      	lsls	r3, r3, #1
 8000502:	fa02 f303 	lsl.w	r3, r2, r3
        temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 8000506:	617b      	str	r3, [r7, #20]
        pGPIOHandle->pGPIOx->MODER &=
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	681a      	ldr	r2, [r3, #0]
            ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // clearing
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	791b      	ldrb	r3, [r3, #4]
 8000512:	005b      	lsls	r3, r3, #1
 8000514:	2103      	movs	r1, #3
 8000516:	fa01 f303 	lsl.w	r3, r1, r3
 800051a:	43db      	mvns	r3, r3
 800051c:	4619      	mov	r1, r3
        pGPIOHandle->pGPIOx->MODER &=
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	400a      	ands	r2, r1
 8000524:	601a      	str	r2, [r3, #0]
        pGPIOHandle->pGPIOx->MODER |= temp;
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	6819      	ldr	r1, [r3, #0]
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	697a      	ldr	r2, [r7, #20]
 8000532:	430a      	orrs	r2, r1
 8000534:	601a      	str	r2, [r3, #0]
        temp = 0;
 8000536:	2300      	movs	r3, #0
 8000538:	617b      	str	r3, [r7, #20]

        // 2. Configure the speed
        temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	799b      	ldrb	r3, [r3, #6]
 800053e:	461a      	mov	r2, r3
                << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	791b      	ldrb	r3, [r3, #4]
 8000544:	005b      	lsls	r3, r3, #1
 8000546:	fa02 f303 	lsl.w	r3, r2, r3
        temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 800054a:	617b      	str	r3, [r7, #20]
        pGPIOHandle->pGPIOx->OSPEEDR &=
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	689a      	ldr	r2, [r3, #8]
            ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // clearing
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	791b      	ldrb	r3, [r3, #4]
 8000556:	005b      	lsls	r3, r3, #1
 8000558:	2103      	movs	r1, #3
 800055a:	fa01 f303 	lsl.w	r3, r1, r3
 800055e:	43db      	mvns	r3, r3
 8000560:	4619      	mov	r1, r3
        pGPIOHandle->pGPIOx->OSPEEDR &=
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	400a      	ands	r2, r1
 8000568:	609a      	str	r2, [r3, #8]
        pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	6899      	ldr	r1, [r3, #8]
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	697a      	ldr	r2, [r7, #20]
 8000576:	430a      	orrs	r2, r1
 8000578:	609a      	str	r2, [r3, #8]
        temp = 0;
 800057a:	2300      	movs	r3, #0
 800057c:	617b      	str	r3, [r7, #20]

        // 3. Configure the pupd settings
        temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	79db      	ldrb	r3, [r3, #7]
 8000582:	461a      	mov	r2, r3
                << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	005b      	lsls	r3, r3, #1
 800058a:	fa02 f303 	lsl.w	r3, r2, r3
        temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl
 800058e:	617b      	str	r3, [r7, #20]
        pGPIOHandle->pGPIOx->PUPDR &=
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	68da      	ldr	r2, [r3, #12]
            ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // clearing
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	005b      	lsls	r3, r3, #1
 800059c:	2103      	movs	r1, #3
 800059e:	fa01 f303 	lsl.w	r3, r1, r3
 80005a2:	43db      	mvns	r3, r3
 80005a4:	4619      	mov	r1, r3
        pGPIOHandle->pGPIOx->PUPDR &=
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	400a      	ands	r2, r1
 80005ac:	60da      	str	r2, [r3, #12]
        pGPIOHandle->pGPIOx->PUPDR |= temp;
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	68d9      	ldr	r1, [r3, #12]
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	697a      	ldr	r2, [r7, #20]
 80005ba:	430a      	orrs	r2, r1
 80005bc:	60da      	str	r2, [r3, #12]
        temp = 0;
 80005be:	2300      	movs	r3, #0
 80005c0:	617b      	str	r3, [r7, #20]

        if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_OUT) {
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	795b      	ldrb	r3, [r3, #5]
 80005c6:	2b01      	cmp	r3, #1
 80005c8:	d11f      	bne.n	800060a <GPIO_init+0x12a>
            // 4. Configure the output type
            temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	7a1b      	ldrb	r3, [r3, #8]
 80005ce:	461a      	mov	r2, r3
                    << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	791b      	ldrb	r3, [r3, #4]
 80005d4:	fa02 f303 	lsl.w	r3, r2, r3
            temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType
 80005d8:	617b      	str	r3, [r7, #20]
            pGPIOHandle->pGPIOx->OTYPER &=
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	685a      	ldr	r2, [r3, #4]
                ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	791b      	ldrb	r3, [r3, #4]
 80005e4:	4619      	mov	r1, r3
 80005e6:	2301      	movs	r3, #1
 80005e8:	408b      	lsls	r3, r1
 80005ea:	43db      	mvns	r3, r3
 80005ec:	4619      	mov	r1, r3
            pGPIOHandle->pGPIOx->OTYPER &=
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	400a      	ands	r2, r1
 80005f4:	605a      	str	r2, [r3, #4]
            pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	6859      	ldr	r1, [r3, #4]
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	697a      	ldr	r2, [r7, #20]
 8000602:	430a      	orrs	r2, r1
 8000604:	605a      	str	r2, [r3, #4]
            temp = 0;
 8000606:	2300      	movs	r3, #0
 8000608:	617b      	str	r3, [r7, #20]
        }

        // 5. Configure the alternate functionality
        if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	795b      	ldrb	r3, [r3, #5]
 800060e:	2b02      	cmp	r3, #2
 8000610:	f040 8103 	bne.w	800081a <GPIO_init+0x33a>
            // Configure the alternate function register
            uint8_t temp1, temp2;
            temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	791b      	ldrb	r3, [r3, #4]
 8000618:	08db      	lsrs	r3, r3, #3
 800061a:	743b      	strb	r3, [r7, #16]
            temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	791b      	ldrb	r3, [r3, #4]
 8000620:	f003 0307 	and.w	r3, r3, #7
 8000624:	73fb      	strb	r3, [r7, #15]
            pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); // clearing
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	7c3a      	ldrb	r2, [r7, #16]
 800062c:	3208      	adds	r2, #8
 800062e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000632:	7bfb      	ldrb	r3, [r7, #15]
 8000634:	009b      	lsls	r3, r3, #2
 8000636:	220f      	movs	r2, #15
 8000638:	fa02 f303 	lsl.w	r3, r2, r3
 800063c:	43db      	mvns	r3, r3
 800063e:	4618      	mov	r0, r3
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	7c3a      	ldrb	r2, [r7, #16]
 8000646:	4001      	ands	r1, r0
 8000648:	3208      	adds	r2, #8
 800064a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
            pGPIOHandle->pGPIOx->AFR[temp1] |=
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	681b      	ldr	r3, [r3, #0]
 8000652:	7c3a      	ldrb	r2, [r7, #16]
 8000654:	3208      	adds	r2, #8
 8000656:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
                (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	7a5b      	ldrb	r3, [r3, #9]
 800065e:	461a      	mov	r2, r3
 8000660:	7bfb      	ldrb	r3, [r7, #15]
 8000662:	009b      	lsls	r3, r3, #2
 8000664:	fa02 f303 	lsl.w	r3, r2, r3
 8000668:	4618      	mov	r0, r3
            pGPIOHandle->pGPIOx->AFR[temp1] |=
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	7c3a      	ldrb	r2, [r7, #16]
 8000670:	4301      	orrs	r1, r0
 8000672:	3208      	adds	r2, #8
 8000674:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        SYSCFG->EXTICR[temp1] |= (portcode << (4 * temp2));

        // 3. Enable the EXTI interrupt delivery using IMR
        EXTI->EXTI_IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
    }
}
 8000678:	e0cf      	b.n	800081a <GPIO_init+0x33a>
        if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	795b      	ldrb	r3, [r3, #5]
 800067e:	2b04      	cmp	r3, #4
 8000680:	d117      	bne.n	80006b2 <GPIO_init+0x1d2>
            EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000682:	4b69      	ldr	r3, [pc, #420]	; (8000828 <GPIO_init+0x348>)
 8000684:	68db      	ldr	r3, [r3, #12]
 8000686:	687a      	ldr	r2, [r7, #4]
 8000688:	7912      	ldrb	r2, [r2, #4]
 800068a:	4611      	mov	r1, r2
 800068c:	2201      	movs	r2, #1
 800068e:	408a      	lsls	r2, r1
 8000690:	4611      	mov	r1, r2
 8000692:	4a65      	ldr	r2, [pc, #404]	; (8000828 <GPIO_init+0x348>)
 8000694:	430b      	orrs	r3, r1
 8000696:	60d3      	str	r3, [r2, #12]
            EXTI->EXTI_RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000698:	4b63      	ldr	r3, [pc, #396]	; (8000828 <GPIO_init+0x348>)
 800069a:	689b      	ldr	r3, [r3, #8]
 800069c:	687a      	ldr	r2, [r7, #4]
 800069e:	7912      	ldrb	r2, [r2, #4]
 80006a0:	4611      	mov	r1, r2
 80006a2:	2201      	movs	r2, #1
 80006a4:	408a      	lsls	r2, r1
 80006a6:	43d2      	mvns	r2, r2
 80006a8:	4611      	mov	r1, r2
 80006aa:	4a5f      	ldr	r2, [pc, #380]	; (8000828 <GPIO_init+0x348>)
 80006ac:	400b      	ands	r3, r1
 80006ae:	6093      	str	r3, [r2, #8]
 80006b0:	e035      	b.n	800071e <GPIO_init+0x23e>
        } else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT) {
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	795b      	ldrb	r3, [r3, #5]
 80006b6:	2b05      	cmp	r3, #5
 80006b8:	d117      	bne.n	80006ea <GPIO_init+0x20a>
            EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006ba:	4b5b      	ldr	r3, [pc, #364]	; (8000828 <GPIO_init+0x348>)
 80006bc:	689b      	ldr	r3, [r3, #8]
 80006be:	687a      	ldr	r2, [r7, #4]
 80006c0:	7912      	ldrb	r2, [r2, #4]
 80006c2:	4611      	mov	r1, r2
 80006c4:	2201      	movs	r2, #1
 80006c6:	408a      	lsls	r2, r1
 80006c8:	4611      	mov	r1, r2
 80006ca:	4a57      	ldr	r2, [pc, #348]	; (8000828 <GPIO_init+0x348>)
 80006cc:	430b      	orrs	r3, r1
 80006ce:	6093      	str	r3, [r2, #8]
            EXTI->EXTI_FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006d0:	4b55      	ldr	r3, [pc, #340]	; (8000828 <GPIO_init+0x348>)
 80006d2:	68db      	ldr	r3, [r3, #12]
 80006d4:	687a      	ldr	r2, [r7, #4]
 80006d6:	7912      	ldrb	r2, [r2, #4]
 80006d8:	4611      	mov	r1, r2
 80006da:	2201      	movs	r2, #1
 80006dc:	408a      	lsls	r2, r1
 80006de:	43d2      	mvns	r2, r2
 80006e0:	4611      	mov	r1, r2
 80006e2:	4a51      	ldr	r2, [pc, #324]	; (8000828 <GPIO_init+0x348>)
 80006e4:	400b      	ands	r3, r1
 80006e6:	60d3      	str	r3, [r2, #12]
 80006e8:	e019      	b.n	800071e <GPIO_init+0x23e>
        } else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT) {
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	795b      	ldrb	r3, [r3, #5]
 80006ee:	2b06      	cmp	r3, #6
 80006f0:	d115      	bne.n	800071e <GPIO_init+0x23e>
            EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006f2:	4b4d      	ldr	r3, [pc, #308]	; (8000828 <GPIO_init+0x348>)
 80006f4:	68db      	ldr	r3, [r3, #12]
 80006f6:	687a      	ldr	r2, [r7, #4]
 80006f8:	7912      	ldrb	r2, [r2, #4]
 80006fa:	4611      	mov	r1, r2
 80006fc:	2201      	movs	r2, #1
 80006fe:	408a      	lsls	r2, r1
 8000700:	4611      	mov	r1, r2
 8000702:	4a49      	ldr	r2, [pc, #292]	; (8000828 <GPIO_init+0x348>)
 8000704:	430b      	orrs	r3, r1
 8000706:	60d3      	str	r3, [r2, #12]
            EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000708:	4b47      	ldr	r3, [pc, #284]	; (8000828 <GPIO_init+0x348>)
 800070a:	689b      	ldr	r3, [r3, #8]
 800070c:	687a      	ldr	r2, [r7, #4]
 800070e:	7912      	ldrb	r2, [r2, #4]
 8000710:	4611      	mov	r1, r2
 8000712:	2201      	movs	r2, #1
 8000714:	408a      	lsls	r2, r1
 8000716:	4611      	mov	r1, r2
 8000718:	4a43      	ldr	r2, [pc, #268]	; (8000828 <GPIO_init+0x348>)
 800071a:	430b      	orrs	r3, r1
 800071c:	6093      	str	r3, [r2, #8]
        uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	791b      	ldrb	r3, [r3, #4]
 8000722:	089b      	lsrs	r3, r3, #2
 8000724:	74fb      	strb	r3, [r7, #19]
        uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	791b      	ldrb	r3, [r3, #4]
 800072a:	f003 0303 	and.w	r3, r3, #3
 800072e:	74bb      	strb	r3, [r7, #18]
        uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	681b      	ldr	r3, [r3, #0]
 8000734:	4a3d      	ldr	r2, [pc, #244]	; (800082c <GPIO_init+0x34c>)
 8000736:	4293      	cmp	r3, r2
 8000738:	d039      	beq.n	80007ae <GPIO_init+0x2ce>
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	4a3c      	ldr	r2, [pc, #240]	; (8000830 <GPIO_init+0x350>)
 8000740:	4293      	cmp	r3, r2
 8000742:	d032      	beq.n	80007aa <GPIO_init+0x2ca>
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	681b      	ldr	r3, [r3, #0]
 8000748:	4a3a      	ldr	r2, [pc, #232]	; (8000834 <GPIO_init+0x354>)
 800074a:	4293      	cmp	r3, r2
 800074c:	d02b      	beq.n	80007a6 <GPIO_init+0x2c6>
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	681b      	ldr	r3, [r3, #0]
 8000752:	4a39      	ldr	r2, [pc, #228]	; (8000838 <GPIO_init+0x358>)
 8000754:	4293      	cmp	r3, r2
 8000756:	d024      	beq.n	80007a2 <GPIO_init+0x2c2>
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	4a37      	ldr	r2, [pc, #220]	; (800083c <GPIO_init+0x35c>)
 800075e:	4293      	cmp	r3, r2
 8000760:	d01d      	beq.n	800079e <GPIO_init+0x2be>
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	4a36      	ldr	r2, [pc, #216]	; (8000840 <GPIO_init+0x360>)
 8000768:	4293      	cmp	r3, r2
 800076a:	d016      	beq.n	800079a <GPIO_init+0x2ba>
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	4a34      	ldr	r2, [pc, #208]	; (8000844 <GPIO_init+0x364>)
 8000772:	4293      	cmp	r3, r2
 8000774:	d00f      	beq.n	8000796 <GPIO_init+0x2b6>
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	4a33      	ldr	r2, [pc, #204]	; (8000848 <GPIO_init+0x368>)
 800077c:	4293      	cmp	r3, r2
 800077e:	d008      	beq.n	8000792 <GPIO_init+0x2b2>
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	4a31      	ldr	r2, [pc, #196]	; (800084c <GPIO_init+0x36c>)
 8000786:	4293      	cmp	r3, r2
 8000788:	d101      	bne.n	800078e <GPIO_init+0x2ae>
 800078a:	2308      	movs	r3, #8
 800078c:	e010      	b.n	80007b0 <GPIO_init+0x2d0>
 800078e:	2300      	movs	r3, #0
 8000790:	e00e      	b.n	80007b0 <GPIO_init+0x2d0>
 8000792:	2307      	movs	r3, #7
 8000794:	e00c      	b.n	80007b0 <GPIO_init+0x2d0>
 8000796:	2306      	movs	r3, #6
 8000798:	e00a      	b.n	80007b0 <GPIO_init+0x2d0>
 800079a:	2305      	movs	r3, #5
 800079c:	e008      	b.n	80007b0 <GPIO_init+0x2d0>
 800079e:	2304      	movs	r3, #4
 80007a0:	e006      	b.n	80007b0 <GPIO_init+0x2d0>
 80007a2:	2303      	movs	r3, #3
 80007a4:	e004      	b.n	80007b0 <GPIO_init+0x2d0>
 80007a6:	2302      	movs	r3, #2
 80007a8:	e002      	b.n	80007b0 <GPIO_init+0x2d0>
 80007aa:	2301      	movs	r3, #1
 80007ac:	e000      	b.n	80007b0 <GPIO_init+0x2d0>
 80007ae:	2300      	movs	r3, #0
 80007b0:	747b      	strb	r3, [r7, #17]
        SYSCFG_PCLK_EN();
 80007b2:	4b27      	ldr	r3, [pc, #156]	; (8000850 <GPIO_init+0x370>)
 80007b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007b6:	4a26      	ldr	r2, [pc, #152]	; (8000850 <GPIO_init+0x370>)
 80007b8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80007bc:	6453      	str	r3, [r2, #68]	; 0x44
        SYSCFG->EXTICR[temp1] &= ~(0xF << (4 * temp2)); // clearing
 80007be:	4a25      	ldr	r2, [pc, #148]	; (8000854 <GPIO_init+0x374>)
 80007c0:	7cfb      	ldrb	r3, [r7, #19]
 80007c2:	3302      	adds	r3, #2
 80007c4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80007c8:	7cbb      	ldrb	r3, [r7, #18]
 80007ca:	009b      	lsls	r3, r3, #2
 80007cc:	210f      	movs	r1, #15
 80007ce:	fa01 f303 	lsl.w	r3, r1, r3
 80007d2:	43db      	mvns	r3, r3
 80007d4:	4618      	mov	r0, r3
 80007d6:	491f      	ldr	r1, [pc, #124]	; (8000854 <GPIO_init+0x374>)
 80007d8:	7cfb      	ldrb	r3, [r7, #19]
 80007da:	4002      	ands	r2, r0
 80007dc:	3302      	adds	r3, #2
 80007de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        SYSCFG->EXTICR[temp1] |= (portcode << (4 * temp2));
 80007e2:	4a1c      	ldr	r2, [pc, #112]	; (8000854 <GPIO_init+0x374>)
 80007e4:	7cfb      	ldrb	r3, [r7, #19]
 80007e6:	3302      	adds	r3, #2
 80007e8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80007ec:	7c79      	ldrb	r1, [r7, #17]
 80007ee:	7cbb      	ldrb	r3, [r7, #18]
 80007f0:	009b      	lsls	r3, r3, #2
 80007f2:	fa01 f303 	lsl.w	r3, r1, r3
 80007f6:	4618      	mov	r0, r3
 80007f8:	4916      	ldr	r1, [pc, #88]	; (8000854 <GPIO_init+0x374>)
 80007fa:	7cfb      	ldrb	r3, [r7, #19]
 80007fc:	4302      	orrs	r2, r0
 80007fe:	3302      	adds	r3, #2
 8000800:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        EXTI->EXTI_IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000804:	4b08      	ldr	r3, [pc, #32]	; (8000828 <GPIO_init+0x348>)
 8000806:	681b      	ldr	r3, [r3, #0]
 8000808:	687a      	ldr	r2, [r7, #4]
 800080a:	7912      	ldrb	r2, [r2, #4]
 800080c:	4611      	mov	r1, r2
 800080e:	2201      	movs	r2, #1
 8000810:	408a      	lsls	r2, r1
 8000812:	4611      	mov	r1, r2
 8000814:	4a04      	ldr	r2, [pc, #16]	; (8000828 <GPIO_init+0x348>)
 8000816:	430b      	orrs	r3, r1
 8000818:	6013      	str	r3, [r2, #0]
}
 800081a:	bf00      	nop
 800081c:	371c      	adds	r7, #28
 800081e:	46bd      	mov	sp, r7
 8000820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000824:	4770      	bx	lr
 8000826:	bf00      	nop
 8000828:	40013c00 	.word	0x40013c00
 800082c:	40020000 	.word	0x40020000
 8000830:	40020400 	.word	0x40020400
 8000834:	40020800 	.word	0x40020800
 8000838:	40020c00 	.word	0x40020c00
 800083c:	40021000 	.word	0x40021000
 8000840:	40021400 	.word	0x40021400
 8000844:	40021800 	.word	0x40021800
 8000848:	40021c00 	.word	0x40021c00
 800084c:	40022000 	.word	0x40022000
 8000850:	40023800 	.word	0x40023800
 8000854:	40013800 	.word	0x40013800

08000858 <GPIO_ToggleOutputPin>:
        pGPIOx->ODR &= ~(1 << PinNumber);
    }
}
void GPIO_WriteToOutputPort(GPIO_RegDef_t* pGPIOx, uint16_t Value) { pGPIOx->ODR = Value; }

void GPIO_ToggleOutputPin(GPIO_RegDef_t* pGPIOx, uint8_t PinNumber) {
 8000858:	b480      	push	{r7}
 800085a:	b083      	sub	sp, #12
 800085c:	af00      	add	r7, sp, #0
 800085e:	6078      	str	r0, [r7, #4]
 8000860:	460b      	mov	r3, r1
 8000862:	70fb      	strb	r3, [r7, #3]
    pGPIOx->ODR ^= (1 << PinNumber);
 8000864:	687b      	ldr	r3, [r7, #4]
 8000866:	695b      	ldr	r3, [r3, #20]
 8000868:	78fa      	ldrb	r2, [r7, #3]
 800086a:	2101      	movs	r1, #1
 800086c:	fa01 f202 	lsl.w	r2, r1, r2
 8000870:	405a      	eors	r2, r3
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	615a      	str	r2, [r3, #20]
}
 8000876:	bf00      	nop
 8000878:	370c      	adds	r7, #12
 800087a:	46bd      	mov	sp, r7
 800087c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000880:	4770      	bx	lr
	...

08000884 <GPIO_IRQInterruptConfig>:
 *
 * @return            - none
 *
 * @Note              - none
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi) {
 8000884:	b480      	push	{r7}
 8000886:	b083      	sub	sp, #12
 8000888:	af00      	add	r7, sp, #0
 800088a:	4603      	mov	r3, r0
 800088c:	460a      	mov	r2, r1
 800088e:	71fb      	strb	r3, [r7, #7]
 8000890:	4613      	mov	r3, r2
 8000892:	71bb      	strb	r3, [r7, #6]
    if (EnorDi == ENABLE) {
 8000894:	79bb      	ldrb	r3, [r7, #6]
 8000896:	2b01      	cmp	r3, #1
 8000898:	d133      	bne.n	8000902 <GPIO_IRQInterruptConfig+0x7e>
        if (IRQNumber <= 31) { // 0~31
 800089a:	79fb      	ldrb	r3, [r7, #7]
 800089c:	2b1f      	cmp	r3, #31
 800089e:	d80a      	bhi.n	80008b6 <GPIO_IRQInterruptConfig+0x32>
            // Program ISER0 register
            *NVIC_ISER0 |= (1 << IRQNumber);
 80008a0:	4b35      	ldr	r3, [pc, #212]	; (8000978 <GPIO_IRQInterruptConfig+0xf4>)
 80008a2:	681b      	ldr	r3, [r3, #0]
 80008a4:	79fa      	ldrb	r2, [r7, #7]
 80008a6:	2101      	movs	r1, #1
 80008a8:	fa01 f202 	lsl.w	r2, r1, r2
 80008ac:	4611      	mov	r1, r2
 80008ae:	4a32      	ldr	r2, [pc, #200]	; (8000978 <GPIO_IRQInterruptConfig+0xf4>)
 80008b0:	430b      	orrs	r3, r1
 80008b2:	6013      	str	r3, [r2, #0]
            // Program ICER2 register
            *NVIC_ICER2 |= (1 << (IRQNumber % 64));
        }
    }
    uint8_t as;
}
 80008b4:	e059      	b.n	800096a <GPIO_IRQInterruptConfig+0xe6>
        } else if (IRQNumber > 31 && IRQNumber < 64) { // 32~63
 80008b6:	79fb      	ldrb	r3, [r7, #7]
 80008b8:	2b1f      	cmp	r3, #31
 80008ba:	d90f      	bls.n	80008dc <GPIO_IRQInterruptConfig+0x58>
 80008bc:	79fb      	ldrb	r3, [r7, #7]
 80008be:	2b3f      	cmp	r3, #63	; 0x3f
 80008c0:	d80c      	bhi.n	80008dc <GPIO_IRQInterruptConfig+0x58>
            *NVIC_ISER1 |= (1 << (IRQNumber % 32));
 80008c2:	4b2e      	ldr	r3, [pc, #184]	; (800097c <GPIO_IRQInterruptConfig+0xf8>)
 80008c4:	681b      	ldr	r3, [r3, #0]
 80008c6:	79fa      	ldrb	r2, [r7, #7]
 80008c8:	f002 021f 	and.w	r2, r2, #31
 80008cc:	2101      	movs	r1, #1
 80008ce:	fa01 f202 	lsl.w	r2, r1, r2
 80008d2:	4611      	mov	r1, r2
 80008d4:	4a29      	ldr	r2, [pc, #164]	; (800097c <GPIO_IRQInterruptConfig+0xf8>)
 80008d6:	430b      	orrs	r3, r1
 80008d8:	6013      	str	r3, [r2, #0]
 80008da:	e046      	b.n	800096a <GPIO_IRQInterruptConfig+0xe6>
        } else if (IRQNumber >= 64 && IRQNumber < 96) { // 64~95
 80008dc:	79fb      	ldrb	r3, [r7, #7]
 80008de:	2b3f      	cmp	r3, #63	; 0x3f
 80008e0:	d943      	bls.n	800096a <GPIO_IRQInterruptConfig+0xe6>
 80008e2:	79fb      	ldrb	r3, [r7, #7]
 80008e4:	2b5f      	cmp	r3, #95	; 0x5f
 80008e6:	d840      	bhi.n	800096a <GPIO_IRQInterruptConfig+0xe6>
            *NVIC_ISER2 |= (1 << (IRQNumber % 64));
 80008e8:	4b25      	ldr	r3, [pc, #148]	; (8000980 <GPIO_IRQInterruptConfig+0xfc>)
 80008ea:	681b      	ldr	r3, [r3, #0]
 80008ec:	79fa      	ldrb	r2, [r7, #7]
 80008ee:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008f2:	2101      	movs	r1, #1
 80008f4:	fa01 f202 	lsl.w	r2, r1, r2
 80008f8:	4611      	mov	r1, r2
 80008fa:	4a21      	ldr	r2, [pc, #132]	; (8000980 <GPIO_IRQInterruptConfig+0xfc>)
 80008fc:	430b      	orrs	r3, r1
 80008fe:	6013      	str	r3, [r2, #0]
}
 8000900:	e033      	b.n	800096a <GPIO_IRQInterruptConfig+0xe6>
        if (IRQNumber <= 31) { // 0~31
 8000902:	79fb      	ldrb	r3, [r7, #7]
 8000904:	2b1f      	cmp	r3, #31
 8000906:	d80a      	bhi.n	800091e <GPIO_IRQInterruptConfig+0x9a>
            *NVIC_ICER0 |= (1 << IRQNumber);
 8000908:	4b1e      	ldr	r3, [pc, #120]	; (8000984 <GPIO_IRQInterruptConfig+0x100>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	79fa      	ldrb	r2, [r7, #7]
 800090e:	2101      	movs	r1, #1
 8000910:	fa01 f202 	lsl.w	r2, r1, r2
 8000914:	4611      	mov	r1, r2
 8000916:	4a1b      	ldr	r2, [pc, #108]	; (8000984 <GPIO_IRQInterruptConfig+0x100>)
 8000918:	430b      	orrs	r3, r1
 800091a:	6013      	str	r3, [r2, #0]
}
 800091c:	e025      	b.n	800096a <GPIO_IRQInterruptConfig+0xe6>
        } else if (IRQNumber > 31 && IRQNumber < 64) { // 32~63
 800091e:	79fb      	ldrb	r3, [r7, #7]
 8000920:	2b1f      	cmp	r3, #31
 8000922:	d90f      	bls.n	8000944 <GPIO_IRQInterruptConfig+0xc0>
 8000924:	79fb      	ldrb	r3, [r7, #7]
 8000926:	2b3f      	cmp	r3, #63	; 0x3f
 8000928:	d80c      	bhi.n	8000944 <GPIO_IRQInterruptConfig+0xc0>
            *NVIC_ICER1 |= (1 << (IRQNumber % 32));
 800092a:	4b17      	ldr	r3, [pc, #92]	; (8000988 <GPIO_IRQInterruptConfig+0x104>)
 800092c:	681b      	ldr	r3, [r3, #0]
 800092e:	79fa      	ldrb	r2, [r7, #7]
 8000930:	f002 021f 	and.w	r2, r2, #31
 8000934:	2101      	movs	r1, #1
 8000936:	fa01 f202 	lsl.w	r2, r1, r2
 800093a:	4611      	mov	r1, r2
 800093c:	4a12      	ldr	r2, [pc, #72]	; (8000988 <GPIO_IRQInterruptConfig+0x104>)
 800093e:	430b      	orrs	r3, r1
 8000940:	6013      	str	r3, [r2, #0]
 8000942:	e012      	b.n	800096a <GPIO_IRQInterruptConfig+0xe6>
        } else if (IRQNumber >= 64 && IRQNumber < 96) { // 64~95
 8000944:	79fb      	ldrb	r3, [r7, #7]
 8000946:	2b3f      	cmp	r3, #63	; 0x3f
 8000948:	d90f      	bls.n	800096a <GPIO_IRQInterruptConfig+0xe6>
 800094a:	79fb      	ldrb	r3, [r7, #7]
 800094c:	2b5f      	cmp	r3, #95	; 0x5f
 800094e:	d80c      	bhi.n	800096a <GPIO_IRQInterruptConfig+0xe6>
            *NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000950:	4b0e      	ldr	r3, [pc, #56]	; (800098c <GPIO_IRQInterruptConfig+0x108>)
 8000952:	681b      	ldr	r3, [r3, #0]
 8000954:	79fa      	ldrb	r2, [r7, #7]
 8000956:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800095a:	2101      	movs	r1, #1
 800095c:	fa01 f202 	lsl.w	r2, r1, r2
 8000960:	4611      	mov	r1, r2
 8000962:	4a0a      	ldr	r2, [pc, #40]	; (800098c <GPIO_IRQInterruptConfig+0x108>)
 8000964:	430b      	orrs	r3, r1
 8000966:	6013      	str	r3, [r2, #0]
}
 8000968:	e7ff      	b.n	800096a <GPIO_IRQInterruptConfig+0xe6>
 800096a:	bf00      	nop
 800096c:	370c      	adds	r7, #12
 800096e:	46bd      	mov	sp, r7
 8000970:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000974:	4770      	bx	lr
 8000976:	bf00      	nop
 8000978:	e000e100 	.word	0xe000e100
 800097c:	e000e104 	.word	0xe000e104
 8000980:	e000e108 	.word	0xe000e108
 8000984:	e000e180 	.word	0xe000e180
 8000988:	e000e184 	.word	0xe000e184
 800098c:	e000e188 	.word	0xe000e188

08000990 <GPIO_IRQPriorityConfig>:
 *
 * @return            - none
 *
 * @Note              - none
 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority) {
 8000990:	b480      	push	{r7}
 8000992:	b085      	sub	sp, #20
 8000994:	af00      	add	r7, sp, #0
 8000996:	4603      	mov	r3, r0
 8000998:	6039      	str	r1, [r7, #0]
 800099a:	71fb      	strb	r3, [r7, #7]
    // 1. Find out the IPR register
    uint8_t iprx = IRQNumber / 4;
 800099c:	79fb      	ldrb	r3, [r7, #7]
 800099e:	089b      	lsrs	r3, r3, #2
 80009a0:	73fb      	strb	r3, [r7, #15]
    // 2. Find out the section
    uint8_t iprx_section = IRQNumber % 4;
 80009a2:	79fb      	ldrb	r3, [r7, #7]
 80009a4:	f003 0303 	and.w	r3, r3, #3
 80009a8:	73bb      	strb	r3, [r7, #14]
    // 3. Do bit shifting to get the priority
    uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 80009aa:	7bbb      	ldrb	r3, [r7, #14]
 80009ac:	00db      	lsls	r3, r3, #3
 80009ae:	b2db      	uxtb	r3, r3
 80009b0:	3304      	adds	r3, #4
 80009b2:	737b      	strb	r3, [r7, #13]
    // 4. Assign priority to the IPR register
    // *(NVIC_PR_BASE_ADDR + (iprx * 4)) |= (IRQPriority << shift_amount);
    *(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 80009b4:	7bfb      	ldrb	r3, [r7, #15]
 80009b6:	009b      	lsls	r3, r3, #2
 80009b8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009bc:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009c0:	6819      	ldr	r1, [r3, #0]
 80009c2:	7b7b      	ldrb	r3, [r7, #13]
 80009c4:	683a      	ldr	r2, [r7, #0]
 80009c6:	409a      	lsls	r2, r3
 80009c8:	7bfb      	ldrb	r3, [r7, #15]
 80009ca:	009b      	lsls	r3, r3, #2
 80009cc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009d0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009d4:	430a      	orrs	r2, r1
 80009d6:	601a      	str	r2, [r3, #0]
    uint8_t a;
}
 80009d8:	bf00      	nop
 80009da:	3714      	adds	r7, #20
 80009dc:	46bd      	mov	sp, r7
 80009de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009e2:	4770      	bx	lr

080009e4 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber) {
 80009e4:	b480      	push	{r7}
 80009e6:	b083      	sub	sp, #12
 80009e8:	af00      	add	r7, sp, #0
 80009ea:	4603      	mov	r3, r0
 80009ec:	71fb      	strb	r3, [r7, #7]
    // Clear the EXTI PR register corresponding to the pin number
    if (EXTI->EXTI_PR & (1 << PinNumber)) {
 80009ee:	4b0c      	ldr	r3, [pc, #48]	; (8000a20 <GPIO_IRQHandling+0x3c>)
 80009f0:	695b      	ldr	r3, [r3, #20]
 80009f2:	79fa      	ldrb	r2, [r7, #7]
 80009f4:	2101      	movs	r1, #1
 80009f6:	fa01 f202 	lsl.w	r2, r1, r2
 80009fa:	4013      	ands	r3, r2
 80009fc:	2b00      	cmp	r3, #0
 80009fe:	d009      	beq.n	8000a14 <GPIO_IRQHandling+0x30>
        // Clear
        EXTI->EXTI_PR |= (1 << PinNumber);
 8000a00:	4b07      	ldr	r3, [pc, #28]	; (8000a20 <GPIO_IRQHandling+0x3c>)
 8000a02:	695b      	ldr	r3, [r3, #20]
 8000a04:	79fa      	ldrb	r2, [r7, #7]
 8000a06:	2101      	movs	r1, #1
 8000a08:	fa01 f202 	lsl.w	r2, r1, r2
 8000a0c:	4611      	mov	r1, r2
 8000a0e:	4a04      	ldr	r2, [pc, #16]	; (8000a20 <GPIO_IRQHandling+0x3c>)
 8000a10:	430b      	orrs	r3, r1
 8000a12:	6153      	str	r3, [r2, #20]
    }
}
 8000a14:	bf00      	nop
 8000a16:	370c      	adds	r7, #12
 8000a18:	46bd      	mov	sp, r7
 8000a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a1e:	4770      	bx	lr
 8000a20:	40013c00 	.word	0x40013c00

08000a24 <__libc_init_array>:
 8000a24:	b570      	push	{r4, r5, r6, lr}
 8000a26:	4d0d      	ldr	r5, [pc, #52]	; (8000a5c <__libc_init_array+0x38>)
 8000a28:	4c0d      	ldr	r4, [pc, #52]	; (8000a60 <__libc_init_array+0x3c>)
 8000a2a:	1b64      	subs	r4, r4, r5
 8000a2c:	10a4      	asrs	r4, r4, #2
 8000a2e:	2600      	movs	r6, #0
 8000a30:	42a6      	cmp	r6, r4
 8000a32:	d109      	bne.n	8000a48 <__libc_init_array+0x24>
 8000a34:	4d0b      	ldr	r5, [pc, #44]	; (8000a64 <__libc_init_array+0x40>)
 8000a36:	4c0c      	ldr	r4, [pc, #48]	; (8000a68 <__libc_init_array+0x44>)
 8000a38:	f000 f820 	bl	8000a7c <_init>
 8000a3c:	1b64      	subs	r4, r4, r5
 8000a3e:	10a4      	asrs	r4, r4, #2
 8000a40:	2600      	movs	r6, #0
 8000a42:	42a6      	cmp	r6, r4
 8000a44:	d105      	bne.n	8000a52 <__libc_init_array+0x2e>
 8000a46:	bd70      	pop	{r4, r5, r6, pc}
 8000a48:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a4c:	4798      	blx	r3
 8000a4e:	3601      	adds	r6, #1
 8000a50:	e7ee      	b.n	8000a30 <__libc_init_array+0xc>
 8000a52:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a56:	4798      	blx	r3
 8000a58:	3601      	adds	r6, #1
 8000a5a:	e7f2      	b.n	8000a42 <__libc_init_array+0x1e>
 8000a5c:	08000a94 	.word	0x08000a94
 8000a60:	08000a94 	.word	0x08000a94
 8000a64:	08000a94 	.word	0x08000a94
 8000a68:	08000a98 	.word	0x08000a98

08000a6c <memset>:
 8000a6c:	4402      	add	r2, r0
 8000a6e:	4603      	mov	r3, r0
 8000a70:	4293      	cmp	r3, r2
 8000a72:	d100      	bne.n	8000a76 <memset+0xa>
 8000a74:	4770      	bx	lr
 8000a76:	f803 1b01 	strb.w	r1, [r3], #1
 8000a7a:	e7f9      	b.n	8000a70 <memset+0x4>

08000a7c <_init>:
 8000a7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a7e:	bf00      	nop
 8000a80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a82:	bc08      	pop	{r3}
 8000a84:	469e      	mov	lr, r3
 8000a86:	4770      	bx	lr

08000a88 <_fini>:
 8000a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a8a:	bf00      	nop
 8000a8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a8e:	bc08      	pop	{r3}
 8000a90:	469e      	mov	lr, r3
 8000a92:	4770      	bx	lr
